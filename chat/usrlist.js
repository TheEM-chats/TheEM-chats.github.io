let listExit
let listName
let listImg
let listObjs = []

let chatbuttons = []
let chatimgs = []

function CommitUserListFunc(btn, arr) {
    num = chatbuttons.length - 1
    while (num > -1) {
        try {
            chatbuttons[num].remove()
        } catch {}
        try {
            chatimgs[num].remove()
        } catch {}
        num--
    }
    btn.remove()
    console.log(arr)
    num = arr.length - 1
    let added = 0
    while (num > -1) {
        if (arr[num].target != "channel" && arr[num].target != "group") {
            addbyid(arr[num].target, chatid, targ2)
            added++
        }
        num--
    }
    alert("–î–æ–±–∞–≤–ª–µ–Ω–æ " + added + " —É—á–∞—Å–Ω–∏–∫–æ–≤, –≤—ã –∏—Ö —É–≤–∏–¥–∏—Ç–µ –∫–æ–≥–¥–∞ –æ–Ω–∏ –∑–∞–π–¥—É—Ç –≤ –≤–∞—à—É –≥—Ä—É–ø–ø—É/–∫–∞–Ω–∞–ª")
    reList()
}

function getProf(url) {
    fetch("https://sebain.pythonanywhere.com/set?filename=" + chatid + "_img&text=" + Crypt(url) + andpass)
        .then(response => response.text())
        .then(data => {
            alert("–ö–∞—Ä—Ç–∏–Ω–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –æ–Ω–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—Å—è –≤ –≥–ª —ç–∫—Ä–∞–Ω–µ")
            syssent("–£ –∫–∞–Ω–∞–ª–∞/–≥—Ä—É–ø–ø—ã –Ω–æ–≤–∞—è –∏–∫–æ–Ω–∫–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –µ—ë –≤ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ!")
        })
        .catch(error => {

        });
}

function uploadProf() {
    const input = document.createElement('input');
    input.type = 'file';
    input.accept = 'image/*';
    input.onchange = (e) => {
        const file = e.target.files[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = (event) => {
            const img = new Image();
            img.onload = () => {
                const canvas = document.createElement('canvas');
                canvas.width = 512;
                canvas.height = 512;
                const ctx = canvas.getContext('2d');
                ctx.drawImage(img, 0, 0, 512, 512);

                canvas.toBlob((blob) => {
                    if (blob.size > 10 * 1024 * 1024) {
                        alert("–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –ø–æ—Å–ª–µ —Å–∂–∞—Ç–∏—è (>10MB)");
                        return;
                    }

                    const formData = new FormData();
                    formData.append("image", blob);

                    // üîê –í—Å—Ç–∞–≤—å —Å–≤–æ–π API –∫–ª—é—á imgbb –Ω–∏–∂–µ
                    const apiKey = "c77c07592cd1f730aacfb02824de3a17";
                    const uploadUrl = "https://api.imgbb.com/1/upload?key=" + apiKey;

                    fetch(uploadUrl, {
                            method: "POST",
                            body: formData
                        })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                const imageUrl = data.data.url;
                                getProf(imageUrl); // üöÄ –í—ã–∑–æ–≤ —Ç–≤–æ–µ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Å—Å—ã–ª–∫–æ–π
                            } else {
                                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", data);
                                alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ");
                            }
                        })
                        .catch(err => {
                            console.error("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", err);
                            alert("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è");
                        });

                }, 'image/jpeg', 0.9);
            };
            img.src = event.target.result;
        };
        reader.readAsDataURL(file);
    };

    input.click(); // üîî –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞
}

function reList() {
    listext()
    listrender()
}

function getBanList() {
    let ret = ""
    let Tnum = bans.length - 1
    while (Tnum > -1) {
        if (bans[Tnum].state == "ban") {
            ret = ret + " " + bans[Tnum].id
        }
        Tnum--
    }
    return ret
}

function pushbans() {
    fetch("https://sebain.pythonanywhere.com/set?filename=" + chatid + "_ignore&text=" + JSON.stringify(bans) + andpass)
        .then(response => response.text())
        .then(data => {
            alert("–ü—Ä–∏–º–µ–Ω–µ–Ω–æ")
            reList()
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
        });
}

function unBanMute(id) {
    bans = bans.filter(obj => obj.id !== id);
    pushbans()
    syssent("–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å:" + getAutor(id))
}

function mute(id) {
    bans.push({
        state: "mute",
        id: id
    });
    pushbans()
    syssent("–ú—É—Ç –≤—ã–¥–∞–Ω:" + getAutor(id))
}

function ban(id) {
    bans.push({
        state: "ban",
        id: id
    });
    pushbans()
    syssent("–ë–∞–Ω –≤—ã–¥–∞–Ω:" + getAutor(id))
}

function ismuted(id) {
    Tnum = bans.length - 1
    while (Tnum > -1) {
        if (bans[Tnum].id == id && bans[Tnum].state == "mute") {
            return true
        }
        Tnum--
    }
    return false
}

function isbanned(id) {
    Tnum = bans.length - 1
    while (Tnum > -1) {
        if (bans[Tnum].id == id && bans[Tnum].state == "ban") {
            return true
        }
        Tnum--
    }
    return false
}

function pretty(btn) {
    btn.style('background-color', '#33adff'); // —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
    btn.style('border-radius', '24px');
    btn.style('z-index', '10');
}

function listext() {
    overlay.style('background', '#ffffff');
    overlay.style('z-index', '-100');
    listExit.remove()
    listAdd.remove()
    try {
        listName.remove()
        listImg.remove()
    } catch {
        console.log("–ù–ï —É–¥–∞–ª–µ–Ω—ã –∏–º—è –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞")
    }
    let Znum = listObjs.length - 1
    while (Znum > -1) {
        listObjs[Znum].remove()
        Znum--
    }

}

function listrender() {
    console.log("–û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —É—á–∞–Ω–∏–∫–æ–≤!")
    overlay.style('background', 'rgba(0, 0, 0, 0.6)');
    overlay.style('z-index', '5');
    listExit = createButton("–ù–∞–∑–∞–¥ <<< <<< <<<")
    listExit.position(0, 0)
    listExit.size(window.innerWidth, 40)
    listExit.mousePressed(() => {
        listext()
    });
    pretty(listExit)

    if (level == 3) {
        listName = createButton("–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ(—Ç—Ä–µ–±—É–µ—Ç –ø–µ—Ä–µ–∑–∞—Ö–æ–¥)")
        listName.position(0, 40)
        listName.size(window.innerWidth, 40)
        listName.mousePressed(() => {
            let input = prompt("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:  (–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–æ–≤–∫–∏, —Ü–∏—Ñ–µ—Ä–∫–∏, @ –∏ . )(–î—Ä—É–≥–∏–µ —Å–∏–º–æ–ª—ã –Ω–µ–ª—å–∑—è)");

            if (input === null) {
                console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞");
            } else if (input === "") {
                console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û–ö, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤—ë–ª");
            } else {
                fetch("https://sebain.pythonanywhere.com/set?filename=" + chatid + "_profn&text=" + input + andpass)
                    .then(response => response.text())
                    .then(data => {
                        alert("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –æ–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞—Ö–æ–¥–∞ –≤ –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É")
                        syssent("–ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –µ–≥–æ!")

                    })
                    .catch(error => {
                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                    });
            }

        });
        pretty(listName)
        listImg = createButton("–°–º–µ–Ω–∏—Ç—å –∏–∫–æ–Ω–∫—É")
        listImg.position(0, 80)
        listImg.size(window.innerWidth, 40)
        listImg.mousePressed(() => {
            uploadProf()
        });
        pretty(listImg)
    }

    num = ids.length - 1
    console.log(num)
    pos = 120
    fetch("https://sebain.pythonanywhere.com/get?filename=" + chatid + "_owner")
        .then(response => response.text())
        .then(data => {
            data = JSON.parse(data)
            while (num > -1) {
                console.log(ids[num])
                if (!isbanned(ids[num])) {
                    let xnum = num
                    let xpos = pos
                    let statusp
                    if (ids[xnum] == data[0]) {
                        statusp = "–ì–ª –ê–¥–º–∏–Ω"
                    } else {
                        dvanum = data.length - 1
                        let found = false
                        while (dvanum > -1) {
                            if (data[dvanum] == ids[xnum]) {
                                found = true
                                statusp = "–ú–æ–¥–µ—Ä"
                            }
                            dvanum--
                        }
                        if (!found) {
                            statusp = "–£—á–∞—Å–Ω–∏–∫"
                        }
                    }

                    xp = createP(getAutor(ids[xnum]).slice(0, 10) + " ID:" + ids[xnum] + " –°—Ç–∞—Ç—É—Å:" + statusp)
                    xp.position(0, xpos)
                    xp.style('background-color', '#33adff');
                    xp.style('z-index', '10');
                    listObjs.push(xp)
                    if (level > 1 && ids[xnum] != data[0]) {
                        let muted = false
                        if (ismuted(ids[xnum])) {
                            muted = true
                            listMute = createButton("–†–∞–∑–º—É—Ç")
                            listMute.style('background-color', '#00cc99')
                        } else {
                            listMute = createButton("–ú—É—Ç")
                            listMute.style('background-color', '#ff66cc')
                        }


                        listMute.position(285, xpos + 15)

                        listMute.style('z-index', '10');
                        listObjs.push(listMute)
                        listMute.mousePressed(() => {
                            if (muted) {
                                unBanMute(ids[xnum])
                            } else {
                                mute(ids[xnum])
                            }
                            reList()

                        });
                        if (level == 3) {
                            listBan = createButton("–ë–∞–Ω")
                            listBan.position(350, xpos + 15)
                            listBan.style('background-color', '#ff3300')
                            listBan.style('z-index', '10');
                            listObjs.push(listBan)
                            listBan.mousePressed(() => {
                                ban(ids[xnum])
                            });
                        }




                    }
                    pos = pos + 20
                }
                num--

            }
            listBannedBtn = createButton("–°–ø–∏—Å–æ–∫ ID –±–∞–Ω–æ–≤")
            pretty(listBannedBtn)
            listBannedBtn.position(0, pos + 20)
            listBannedBtn.mousePressed(() => {
                alert("–°–ø–∏—Å–æ–∫ –±–∞–Ω–æ–≤:" + getBanList())
            });
            listObjs.push(listBannedBtn)
            if (level == 3) {
                listUNBannedBtn = createButton("–†–∞–∑–±–∞–Ω–∏—Ç—å –ø–æ ID")
                listObjs.push(listUNBannedBtn)
                pretty(listUNBannedBtn)
                listUNBannedBtn.position(110, pos + 20)
                listUNBannedBtn.mousePressed(() => {
                    let input = prompt("–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≥–æ, –∫–æ–≥–æ –Ω–∞–¥–æ —Ä–∞–∑–±–∞–Ω–∏—Ç—å!");

                    if (input === null) {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞");
                    } else if (input === "") {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û–ö, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤—ë–ª");
                    } else {
                        unBanMute(input)
                    }
                });

            }
            if (level == 3) {
                GrantAndmin = createButton("–ù–∞–∑–Ω–∞—á–∏—Ç—å –º–æ–¥–µ—Ä–∞ –ø–æ ID")
                pretty(GrantAndmin)
                GrantAndmin.position(0, pos + 50)
                GrantAndmin.mousePressed(() => {
                    let input = prompt("–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≥–æ, –∫–æ–≥–æ –Ω–∞–¥–æ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –º–æ–¥–µ—Ä–æ–º!");

                    if (input === null) {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞");
                    } else if (input === "") {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û–ö, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤—ë–ª");
                    } else {
                        fetch("https://sebain.pythonanywhere.com/get?filename=" + chatid + "_owner")
                            .then(response => response.text())
                            .then(data => {
                                data = JSON.parse(data)
                                data.push(input)
                                data = JSON.stringify(data)
                                fetch("https://sebain.pythonanywhere.com/set?filename=" + chatid + "_owner&text=" + data + andpass)
                                    .then(response => response.text())
                                    .then(data => {
                                        fetch("https://sebain.pythonanywhere.com/addpass?filename=chat_" + chatid + "&2pass=" + input + andpass)
                                            .then(response => response.text())
                                            .then(data => {
                                                fetch("https://sebain.pythonanywhere.com/addpass?filename=" + chatid + "_ignore&2pass=" + input + andpass)
                                                    .then(response => response.text())
                                                    .then(data => {
                                                        alert("–ù–æ–≤—ã–π –º–æ–¥–µ—Ä –Ω–∞–∑–Ω–∞—á–µ–Ω")
                                                        syssent(getAutor(input) + " –Ω–∞–∑–Ω–∞—á–µ–Ω –º–æ–¥–µ—Ä–æ–º! –ë–æ–ª—å—à–µ –æ–± —Ä–æ–ª—è—Ö –≤ —Å–ø–∏—Å–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π(–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 0.1.4)")
                                                        reList()
                                                    })
                                                    .catch(error => {
                                                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                                    });
                                            })
                                            .catch(error => {
                                                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                            });

                                    })
                                    .catch(error => {
                                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                    });
                            })
                            .catch(error => {
                                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                            });
                    }
                });
                listObjs.push(GrantAndmin)
                RemoveAdmin = createButton("–°–Ω—è—Ç—å –º–æ–¥–µ—Ä–∞ –ø–æ ID")
                listObjs.push(RemoveAdmin)
                pretty(RemoveAdmin)
                RemoveAdmin.position(160, pos + 50)
                RemoveAdmin.mousePressed(() => {
                    let input = prompt("–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≥–æ, –∫–æ–≥–æ –Ω–∞–¥–æ —Ä–∞–∑ –º–æ–¥–∏—Ç—å!");

                    if (input === null) {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û—Ç–º–µ–Ω–∞");
                    } else if (input === "") {
                        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –û–ö, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤—ë–ª");
                    } else {
                        fetch("https://sebain.pythonanywhere.com/get?filename=" + chatid + "_owner")
                            .then(response => response.text())
                            .then(data => {
                                data = JSON.parse(data)
                                data = data.filter(item => item !== input);
                                data = JSON.stringify(data)
                                fetch("https://sebain.pythonanywhere.com/set?filename=" + chatid + "_owner&text=" + data + andpass)
                                    .then(response => response.text())
                                    .then(data => {
                                        fetch("https://sebain.pythonanywhere.com/rempass?filename=chat_" + chatid + "&2pass=" + input + andpass)
                                            .then(response => response.text())
                                            .then(data => {
                                                fetch("https://sebain.pythonanywhere.com/rempass?filename=" + chatid + "_ignore&2pass=" + input + andpass)
                                                    .then(response => response.text())
                                                    .then(data => {
                                                        alert("–ù–æ–≤—ã–π –º–æ–¥–µ—Ä —Å–Ω—è—Ç")
                                                        syssent(getAutor(input) + " –ª–∏—à—ë–Ω –º–æ–¥–µ—Ä–∫–∏!")
                                                        reList()
                                                    })
                                                    .catch(error => {
                                                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                                    });
                                            })
                                            .catch(error => {
                                                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                            });
                                    })
                                    .catch(error => {
                                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                                    });
                            })
                            .catch(error => {
                                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
                            });
                    }
                });
            }
            listAdd = createButton("–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å–Ω–∏–∫–æ–≤")
            listAdd.position(0, pos + 70)
            listAdd.mousePressed(() => {
                listext()
                overlay.style('background', 'rgba(0, 0, 0, 0.6)');
                overlay.style('z-index', '5');
                load_chats(true)
            });
            listObjs.push(listAdd)
            pretty(listAdd)


        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
        });


}